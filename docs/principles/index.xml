<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Development Principles on Michael Knapp&#39;s Home Page</title>
    <link>/principles/</link>
    <description>Recent content in Software Development Principles on Michael Knapp&#39;s Home Page</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>2023 Michael Knapp</copyright>
    <lastBuildDate>Wed, 29 Mar 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="/principles/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KISS and YAGNI</title>
      <link>/principles/kiss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/principles/kiss/</guid>
      <description>Prefer to keep your code as simple as possible.</description>
    </item>
    <item>
      <title>Don&#39;t Repeat Yourself</title>
      <link>/principles/dry/</link>
      <pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/principles/dry/</guid>
      <description>Minimize the code duplication.</description>
    </item>
    <item>
      <title>Defensive Programming</title>
      <link>/principles/defensive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/principles/defensive/</guid>
      <description>Carefully consider the trade-offs of defensive programming patterns.</description>
    </item>
    <item>
      <title>Single Responsibility Principle</title>
      <link>/principles/single-responsibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/principles/single-responsibility/</guid>
      <description>Software components and classes should not be responsible for many concerns.</description>
    </item>
    <item>
      <title>Open Closed Principle</title>
      <link>/principles/open-closed/</link>
      <pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/principles/open-closed/</guid>
      <description>Design software classes and components to be easily extended but rarely modified.</description>
    </item>
    <item>
      <title>Substitution</title>
      <link>/principles/substitution/</link>
      <pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/principles/substitution/</guid>
      <description>Your code should be loosely coupled using abstractions, interfaces, and similar substitution principles.</description>
    </item>
    <item>
      <title>Interface Segregation Principle</title>
      <link>/principles/segregation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/principles/segregation/</guid>
      <description>Function arguments should be minimal interfaces.</description>
    </item>
    <item>
      <title>Software Testing</title>
      <link>/principles/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/principles/testing/</guid>
      <description>Your software should have ample automated tests across the board.</description>
    </item>
    <item>
      <title>Configuration Levels</title>
      <link>/principles/configuration/</link>
      <pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/principles/configuration/</guid>
      <description>You should have ample controls over your code from configuration using expressions, templates, and scripts.</description>
    </item>
    <item>
      <title>Judging Quality</title>
      <link>/principles/quality/</link>
      <pubDate>Sat, 18 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/principles/quality/</guid>
      <description>You should routinely use automated tools to assess your code quality.</description>
    </item>
    <item>
      <title>Class Stereotypes</title>
      <link>/principles/stereotypes/</link>
      <pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/principles/stereotypes/</guid>
      <description>Design your classes to follow effective patterns or stereotypes.</description>
    </item>
    <item>
      <title>You Build You Own</title>
      <link>/principles/ybyo/</link>
      <pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/principles/ybyo/</guid>
      <description>Software developers should also be on the hook to support their applications.</description>
    </item>
    <item>
      <title>Avoid Globals</title>
      <link>/principles/globals/</link>
      <pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/principles/globals/</guid>
      <description>Global variables create problems, you should avoid using them.</description>
    </item>
    <item>
      <title>Premature Optimization</title>
      <link>/principles/optimization/</link>
      <pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/principles/optimization/</guid>
      <description>Avoid optimizing code before proving it is necessary.</description>
    </item>
    <item>
      <title>Don&#39;t Reinvent the Wheel</title>
      <link>/principles/reinvent/</link>
      <pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/principles/reinvent/</guid>
      <description>Avoid duplication of efforts by leveraging open source.</description>
    </item>
  </channel>
</rss>
